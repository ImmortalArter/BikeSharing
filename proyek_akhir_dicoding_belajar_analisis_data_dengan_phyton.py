# -*- coding: utf-8 -*-
"""Proyek Akhir Dicoding Belajar Analisis Data dengan Phyton

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TwetFQQ7XH9zrhGem-w4QSa-RQsUMGkr

# Proyek Analisis Data: day.csv (Bike Sharing Dataset)
- **Nama:** [Sayyid Muhammad Hanif]
- **Email:** [sayyidhanif3010@gmail.com]
- **ID Dicoding:** [sayyidhanif3010]

## Menentukan Pertanyaan Bisnis

Pertanyaan 1 :

Bagaimana tren peminjaman sepeda dalam beberapa parameter,
*   Hari
*   Bulan
*   Tahun
*   Hari Libur/Kerja
*   Musim
*   Cuaca

Bagaimana faktor suhu, kelembaban, kecepatan angin memengaruhi banyak peminjaman?




Pertanyaan 2 :   
Apakah terdapat perbedaan pola peminjaman antara pengguna casual dan pengguna terdaftar?

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.impute import SimpleImputer
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler

"""## **Data Wrangling**

### **Gathering Data**

Dataset yang digunakan ialah day.csv dari Bike Sharing Dataset

### Inisialisasi Data
"""

day_df = pd.read_csv("day.csv")
day_df.head(20)

"""### **Assessing Data**

### Menilai tabel
```
day_df
```

Pada tahap ini, kita memeriksa data dari abnormal seperti missing values, duplicates, atau outlier menggunakan info, describe, dan IQR method
"""

# Menampilkan info dataset
print(day_df.info())

"""
Kita dapat mendeteksi tipe yang keliru pada data yaitu dteday. Dimana tipe data yang seharusnya yaitu datetime bukan object"""

day_df.describe()

day_df.isnull().sum()

day_df.duplicated().sum()

"""Hingga saat ini, belum ada abnormal dari dataset"""

import matplotlib.pyplot as plt
import seaborn as sns


# Membuat box plot
plt.figure(figsize=(20, 10))
sns.boxplot(day_df)

# Menyesuaikan ukuran font pada elemen teks lainnya (opsional)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)

# Menampilkan plot
plt.title('Box Plot untuk Melihat Outlier', fontsize=20)
plt.xlabel('Kategori', fontsize=18)
plt.ylabel('Nilai', fontsize=18)
plt.show()

"""Kita dapat melihat diatas bahwa terdapat outlier yang signifikan pada kolom 'casual'

### **Cleaning Data**

### Membersihkan Data

```
day_df
```

Pada tahap ini, kita memperbaiki abnormal dari data yang telah ditemukan pada tahap sebelumnya

### Type data baru
"""

# Mengubah tipe data dteday menjadi datetime
day_df['dteday'] = pd.to_datetime(day_df['dteday'])

# Menampilkan info dataset
print(day_df.info())

"""### Outliers

Selanjutnya kita menghapus outliers menggunakan drop
"""

import pandas as pd

Q1 = (day_df['casual']).quantile(0.25)
Q3 = (day_df['casual']).quantile(0.75)
IQR = Q3 - Q1

maximum = Q3 + (1.5*IQR)
minimum = Q1 - (1.5*IQR)

kondisi_lower_than = day_df['casual'] < minimum
kondisi_more_than = day_df['casual'] > maximum

day_df.drop(day_df[kondisi_lower_than].index, inplace=True)
day_df.drop(day_df[kondisi_more_than].index, inplace=True)

import matplotlib.pyplot as plt
import seaborn as sns


# Membuat box plot
plt.figure(figsize=(20, 10))
sns.boxplot(day_df['casual'])

# Menyesuaikan ukuran font pada elemen teks lainnya (opsional)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)

# Menampilkan plot
plt.title('Box Plot untuk Melihat Outlier', fontsize=20)
plt.xlabel('Kategori', fontsize=18)
plt.ylabel('Nilai', fontsize=18)
plt.show()

"""Outlier sudah tidak signifikan lagi dan di minimalisir"""

day_df.info()

"""## Exploratory Data Analysis (EDA)

Pada tahap ini, kita akan mengeksplorasi data yang telah dibersihkan guna memperoleh insight dan menjawab pertanyaan analisis dengan menggunakan metode RFM analysis dan Clustering

**RFM Analysis**

Recency (Ketepatan Waktu): Menentukan seberapa baru pelanggan melakukan pembelian atau interaksi.

Frequency (Frekuensi): Mengukur seberapa sering pelanggan melakukan pembelian atau interaksi.

Monetary (Moneter): Menilai total nilai pembelian atau transaksi yang dilakukan oleh pelanggan.

RFM Analysis membantu dalam mengidentifikasi dan mengelompokkan pelanggan ke dalam segmen-segmen tertentu berdasarkan perilaku pembelian mereka.

**Clustering**

Clustering adalah teknik analisis yang digunakan untuk mengelompokkan data menjadi kelompok-kelompok homogen berdasarkan kesamaan karakteristik tertentu.

### Explore `day_df`
"""

day_df.describe(include="all")

"""Berikut ini adalah beberapa pengelompokan parameter dengan statistik deskriptif

#### RMC Analysis sederhana & Clustering
"""

# Menghitung jumlah dari kolom 'cnt'
total_peminjaman = day_df['cnt'].sum()

print("Total Peminjaman Sepeda:", total_peminjaman)

"""Stats banyak peminjaman berdasarkan hari (Minggu- Sabtu)

0 = Minggu, 1 = Senin, ...., 6 = Sabtu
"""

pola_mingguan = day_df.groupby('weekday')['cnt'].sum()
pola_mingguan

"""Stats banyak peminjaman berdasarkan bulan (Jan-Des)

1 = Jan, 2 = Feb, ...., 12 = Des
"""

pola_bulanan = day_df.groupby('mnth')['cnt'].sum()
pola_bulanan

"""Stats banyak peminjaman berdasarkan tahun (2011-2012)

0 = 2011


1 = 2012
"""

total_tahunan = day_df.groupby('yr')['cnt'].sum()
total_tahunan

"""Stats banyak peminjaman berdasarkan cuaca pada hari tersebut

Ket:
- 1: Clear, Few clouds, Partly cloudy, Partly cloudy
- 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist
- 3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds




"""

day_df.groupby('weathersit')['cnt'].sum()

"""Stats banyak peminjaman berdasarkan hari libur atau hari kerja

0 : Hari kerja

1 : Hari libur
"""

day_df.groupby(['holiday'])['cnt'].sum()

"""Stats banyak peminjaman berdasarkan musim

1 : Semi

2 : Panas

3 : Gugur

4 : Dingin
"""

day_df.groupby(['season'])['cnt'].sum()

"""Statistik deskriptif dari pengguna casual dan registered"""

# Statistik deskriptif untuk pengguna casual
statistik_casual = day_df['casual'].describe()

# Statistik deskriptif untuk pengguna terdaftar
statistik_registered = day_df['registered'].describe()

statistik_casual

statistik_registered

"""## Visualization & Explanatory Analysis

### Pertanyaan 1:
Bagaimana tren peminjaman sepeda dalam beberapa parameter,
*   Hari
*   Bulan
*   Tahun
*   Hari Libur/Kerja
*   Musim
*   Cuaca

Bagaimana faktor suhu, kelembaban, kecepatan angin memengaruhi banyak peminjaman?

Berikut ini adalah tabel-tabel histogram berdasarkan parameter yang diteliti
"""

import matplotlib.pyplot as plt

# Data jumlah peminjaman sepeda pada setiap hari dalam seminggu
pola_mingguan = day_df.groupby('weekday')['cnt'].sum()

# Membuat mapping dari angka ke nama hari
mapping_hari = {0: '0_Minggu', 1: '1_Senin', 2: '2_Selasa', 3: '3_Rabu', 4: '4_Kamis', 5: '5_Jumat', 6: '6_Sabtu'}

# Mengganti nama indeks dengan menggunakan mapping
pola_mingguan = pola_mingguan.rename(index=mapping_hari)

# Membuat histogram menggunakan matplotlib
plt.figure(figsize=(10, 6))
plt.bar(pola_mingguan.index, pola_mingguan.values, color='skyblue')
plt.title('Histogram Jumlah Peminjaman Sepeda pada Setiap Hari dalam Seminggu (2011-2012)')
plt.xlabel('Hari dalam Seminggu')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Dari tabel diatas dapat ditarik kesimpulan bahwa peminjaman meningkat saat hari kerja Senin- Jumat"""

import matplotlib.pyplot as plt

# Data jumlah peminjaman sepeda pada tiap bulan
pola_bulanan = day_df.groupby('mnth')['cnt'].sum()

# Membuat mapping dari angka ke nama bulan
mapping_bulan = {1: '1_Januari', 2: '2_Februari', 3: '3_Maret', 4: '4_April', 5: '5_Mei', 6: '6_Juni', 7: '7_Juli', 8: '8_Agustus', 9: '9_September', 10: '10_Oktober', 11: '11_November', 12: '12_Desember'}

# Mengganti nama indeks dengan menggunakan mapping
pola_bulanan = pola_bulanan.rename(index=mapping_bulan)

# Membuat histogram menggunakan matplotlib
plt.figure(figsize=(20, 10))
plt.bar(pola_bulanan.index, pola_bulanan.values, color='skyblue')
plt.title('Histogram Jumlah Peminjaman Sepeda pada Setiap Bulan (2011-2012)')
plt.xlabel('Bulan')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Tabel diatas menunjukkan bahwa peminjaman sepeda meningkat di pertengahan tahun terutama pada bulan Agustus"""

import matplotlib.pyplot as plt

# Data jumlah peminjaman sepeda pada tiap tahun
total_tahunan = day_df.groupby('yr')['cnt'].sum()

# Membuat mapping dari angka ke tahun
mapping_thn = {0: '2011', 1: '2012'}

# Mengganti nama indeks dengan menggunakan mapping
total_tahunan = total_tahunan.rename(index=mapping_thn)

# Membuat histogram menggunakan matplotlib
plt.figure(figsize=(20, 10))
plt.bar(total_tahunan.index, total_tahunan.values, color='skyblue')
plt.title('Histogram Jumlah Peminjaman Sepeda pada Setiap Tahun (2011-2012)')
plt.xlabel('Tahun')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Dari tabel diatas menunjukkan bahwa tahun 2012 mengalami peningkatan peminjaman yang signifikan"""

import matplotlib.pyplot as plt

# Menghitung jumlah peminjaman sepeda untuk setiap kategori 'holiday'
total_peminjaman_per_holiday = day_df.groupby('holiday')['cnt'].mean()

# Membuat histogram menggunakan matplotlib
plt.figure(figsize=(8, 6))
plt.bar(total_peminjaman_per_holiday.index, total_peminjaman_per_holiday.values, color=['skyblue', 'lightgreen'])
plt.title('Histogram Jumlah Peminjaman Sepeda pada Hari Libur dan Hari Kerja')
plt.xlabel('Hari Libur (Hijau) dan Hari Kerja (Biru)')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Tabel diatas merupakan perbandingan peminjaman pada hari libur dan kerja yang sudah diratakan. Dapat dilihat bahwa hari kerja adalah hari yang rentan peminjaman"""

import matplotlib.pyplot as plt

# Data jumlah peminjaman sepeda pada tiap tahun
total_musim = day_df.groupby('season')['cnt'].sum()

# Membuat mapping dari angka ke tahun
mapping_musim = {1: '1_Springer', 2: '2_Summer', 3: '3_Fall', 4: '4_Winter'}

# Mengganti nama indeks dengan menggunakan mapping
total_musim = total_musim.rename(index=mapping_musim)

# Membuat histogram menggunakan matplotlib
plt.figure(figsize=(20, 10))
plt.bar(total_musim.index, total_musim.values, color='skyblue')
plt.title('Histogram Jumlah Peminjaman Sepeda pada Setiap Musim (2011-2012)')
plt.xlabel('Musim')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Pada tabel diatas menunjukkan bahwa musim gugur adalah musim paling banyak peminjaman sepeda"""

# Visualisasi pengaruh Weathersit
day_df.groupby('weathersit')['cnt'].mean().sort_index().plot(kind='bar', figsize=(8, 6), title='Pengaruh Weathersit terhadap Peminjaman')
plt.xlabel('Weathersit')
plt.ylabel('Jumlah Peminjaman')
plt.show()

"""Tabel diatas menunjukkan bahwa udara yang paling disukai pelanggan untuk meminjam sepeda yaitu udara yang paling baik dan normal dimana 1 menunjukkan bahwa udara terang dan sedikit berawan"""

# Visualisasi pengaruh suhu terhadap peminjaman
fig, axes = plt.subplots(nrows=2, ncols=1, figsize=(12, 10), sharex=True)
day_df.plot(x='temp', y='cnt', kind='scatter', ax=axes[0], title='Pengaruh Suhu (temp) terhadap Peminjaman')
day_df.plot(x='atemp', y='cnt', kind='scatter', ax=axes[1], title='Pengaruh Feeling Temperature (atemp) terhadap Peminjaman')

plt.tight_layout()
plt.show()

"""Jika dilihat seksama, scatter plot diatas menunjukkan hubungan linear naik antara peningkatan suhu dengan banyak peminjaman sepeda"""

# Visualisasi pengaruh kelembaban dan kecepatan angin terhadap peminjaman
fig, axes = plt.subplots(nrows=2, ncols=1, figsize=(12, 10), sharex=True)
day_df.plot(x='hum', y='cnt', kind='scatter', ax=axes[0], title='Pengaruh Kelembaban terhadap Peminjaman')
day_df.plot(x='windspeed', y='cnt', kind='scatter', ax=axes[1], title='Pengaruh Kecepatan Angin terhadap Peminjaman')

plt.tight_layout()
plt.show()

"""Dari scatter plot diatas menunjukkan bahwa terdapat hubungan linear menurun antara peningkatan kecepatan angin dan kelembaban dengan peminjaman

### Pertanyaan 2:
Apakah terdapat perbedaan pola peminjaman antara pengguna casual dan pengguna terdaftar?
"""

import seaborn as sns
import matplotlib.pyplot as plt
# Membuat mapping dari angka ke nama hari
mapping_hari = {0: '0_Minggu', 1: '1_Senin', 2: '2_Selasa', 3: '3_Rabu', 4: '4_Kamis', 5: '5_Jumat', 6: '6_Sabtu'}

# Visualisasi pola harian untuk setiap jenis pengguna
plt.figure(figsize=(12, 6))
sns.lineplot(x='dteday', y='casual', data=day_df, label='Pengguna Casual')
sns.lineplot(x='dteday', y='registered', data=day_df, label='Pengguna Terdaftar')
plt.title('Pola Harian Peminjaman antara Pengguna Casual dan Terdaftar')
plt.xlabel('Tanggal')
plt.ylabel('Jumlah Peminjaman')
plt.legend()
plt.show()

"""Pada tabel diatas menunjukkan bahwa banyak pengguna yang terdaftar (registered) jauh lebih banyak dibanding pengguna umum (casual). Selain itu, pergerakan tren dari 2 parameter tersebut sedikit identik"""

# Visualisasi pola mingguan untuk setiap jenis pengguna

plt.figure(figsize=(12, 6))
sns.lineplot(x='weekday', y='casual', data=day_df, label='Pengguna Casual')
sns.lineplot(x='weekday', y='registered', data=day_df, label='Pengguna Terdaftar')
plt.title('Pola Mingguan Peminjaman antara Pengguna Casual dan Terdaftar')
plt.xlabel('Hari dalam Seminggu')
plt.ylabel('Jumlah Peminjaman')
plt.legend()
plt.show()

"""Pada tabel diatas, kita menemukan bahwa pengguna terdaftar (registered) lebih banyak pada hari kerja dalam satu minggu sedangkan pengguna umum meningkat apabila hari libur"""

from scipy.stats import ttest_ind

# Memisahkan data untuk pengguna casual dan terdaftar
peminjaman_casual = day_df['casual']
peminjaman_registered = day_df['registered']

# Melakukan uji t
statistik_t, nilai_p = ttest_ind(peminjaman_casual, peminjaman_registered)

# Menampilkan hasil uji t
print("Statistik t:", statistik_t)
print("Nilai p:", nilai_p)

# Menginterpretasikan hasil
alpha = 0.05
if nilai_p < alpha:
    print("Terdapat perbedaan signifikan antara pengguna casual dan terdaftar.")
else:
    print("Tidak terdapat perbedaan signifikan antara pengguna casual dan terdaftar.")

"""Uji T diatas juga membuktikan bahwa terdapat perbedaan signifikan antara pengguna casual dan registered

## Conclusion

**Kesimpulan**



1.   Dari beberapa penjelasan pada alur sebelumnya, kita mendapatkan kesimpulan yaitu peminjaman sepeda rentan banyak pada hari kerja (Senin - Jumat) terutama pada hari dengan cuaca yang bagus dimana cuaca tersebut menunjukkan langit yang cerah, sedikit berawan,  suhu yang tinggi, dan kecil rasio hujan. Ini terbuktikan dari peningkatan yang signifikan pada pertengahan tahun mendekati musim gugur dimana suhu bumi meningkat dan cuaca rentan hujan

2.   Dari analisis yang sudah dilakukan, dapat ditemukan perbedaan perilaku yang signifikan antara peminjam registered dan casual diantaranya,
- Peminjam lebih banyak yang sudah *registered* dibanding *casual* dan perbedaan (margin) yang signifikan. Ini menunjukkan bahwa terdapat benefit untuk pengguna yang sudah terdaftar dalam meminjam sepeda.

- Pengguna terdaftar (registered) lebih banyak pada hari kerja dalam satu minggu sedangkan pengguna umum meningkat apabila hari libur.

- Kemungkinan besar peminjam yang *registered* ialah masyarakat yang bekerja sedangkan *casual* ialah turis karena alasan-alasan di atas.
"""